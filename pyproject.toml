[project]
name = "app"
version = "0.0.0"
description = "ComfyUI on Modal"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiohttp>=3.10.10",
    "alembic>=1.13.2",
    "asyncpg>=0.29.0",
    "comfy-cli>=1.2.7",
    "einops>=0.8.0",
    "fastapi>=0.115.3",
    "httpx>=0.27.2",
    "modal>=0.64.223",
    "pillow>=11.0.0",
    "psutil>=6.1.0",
    "pydantic-settings>=2.6.0",
    "pyyaml>=6.0.2",
    "safetensors>=0.4.5",
    "scipy>=1.14.1",
    "sentencepiece>=0.2.0",
    "sqlmodel>=0.0.22",
    "structlog>=24.4.0",
    "tokenizers>=0.20.1",
    "torch>=2.5.0",
    "torchaudio>=2.5.0",
    "torchsde>=0.2.6",
    "torchvision>=0.20.0",
    "tqdm>=4.66.6",
    "transformers>=4.46.0",
    "uvicorn>=0.32.0",
]

[tool.uv]
dev-dependencies = [
    "asgi-lifespan>=2.1.0",
    "coverage>=7.6.4",
    "greenlet>=3.1.1",
    "mypy>=1.13.0",
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "rich>=13.9.3",
    "ruff>=0.7.0",
    "toml>=0.10.2",
    "types-toml>=0.10.8.20240310",
]

[project.license]
file = "LICENSE"

[project.urls]
Home = "https://github.com/anthonycorletti/modal-comfyui-example"

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
disallow_untyped_defs = true
exclude = ["dist", "build", ".venv"]

[tool.ruff]
line-length = 88
include = ["*.py"]
exclude = ["dist", "build", ".venv"]
target-version = "py311"

[tool.ruff.lint]
ignore = [
    "D10",
    "D203",
    "D204",
    "D213",
    "D215",
    "D400",
    "D404",
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
    "D415",
]
select = ["E", "F", "I"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.setuptools.package-data]
app = ["py.typed"]

[tool.setuptools.dynamic.version]
attr = "app.__version__"

[tool.setuptools.packages.find]
exclude = ["tests"]

[tool.pytest.ini_options]
addopts = [
    "-o",
    "console_output_style=progress",
    "--asyncio-mode=auto",
    "--disable-warnings",
    "--showlocals",
    "--cov=app",
    "--cov=tests",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-report=html",
]
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
parallel = true
source = ["app", "tests"]
omit = ["*__init__.py", "app/_modal.py"]
concurrency = ["thread", "greenlet", "multiprocessing"]

[tool.coverage.report]
exclude_lines = ["pragma: no cover"]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
